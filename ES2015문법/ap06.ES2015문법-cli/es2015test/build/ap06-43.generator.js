/*
    ES2016에 도입된 제너레이터 방식에 대해서 학습한다.

    제너레이터 방식으로 비동기 처리 방법을 작성하는 방법을 배우고 편리함을 확인한다.
    제너레이터는 반복 처리가 가능한 iterator를 구현할 때 사용가능합니다.
    제너레이터를 이용하면 함수 실행, 함수 중지, 함수 재실행이 가능한다.
    1. 제너레이터 함수 호출 --> 첫번째 yield 까지 실행 후 중지
    2. 제너레이터 함수 호출 --> 두번째 yield 까지 실행 후 중지
    3. 제너레이터 함수 호출 --> 세번째 yield 까지 실행 후 중지

    generator는 function* 으로 정의된 함수를 호출하여 얻게된 객체를 의미한다.


    제너레이터 함수?
    1. 실행, 중지(stop)과 재실행(restart) 이 가능한 함수다.

    2. yeild 를 만나면 실행이 중지되고 next() 를 호출하면 실행이 재개 된다.
    >>> yield ===> 실행중지
    >>> next() ===> 실행재시작

    3. 양방향 메시지 전달을 허용한다.


    제너레이터 함수의 사용예
    >>> 무한 루프에서 실행 중지 그리고 재실행.
    >>> 이진 트리에서의 leaf 순환


    제너레이터 함수 선언
    function * func()

    참고 자료
    1. https://wonism.github.io/javascript-generator/
    2. 책-객체지향스크립트3e-CH05-제너레이터
    3. 책-실전리액트프로그래밍-ch02.7-제너레이터
*/
"use strict";